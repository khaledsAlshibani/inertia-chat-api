spring:
  application:
    name: Inertia Chat App
  datasource:
    url: jdbc:postgresql://localhost:5433/inertia_chat
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
  jpa:
    hibernate:
#      ddl-auto: create-drop
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  flyway:
    enabled: false
#    baseline-on-migrate: true
#    validate-on-migrate: true
#    locations: classpath:db/migration
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:9090}
    allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
    allowed-headers: ${CORS_ALLOWED_HEADERS:Authorization,Content-Type,X-Requested-With}
    allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}
  profiles:
    active: dev

#logging:
#  level:
    # Flyway logging
#    org.flywaydb.core: debug

server:
  port: ${SERVER_PORT:9090}

security:
  jwt:
    secret: ${JWT_SECRET:your-secret-key-here}
    expiration-time: ${JWT_EXPIRATION:3600000}  # 1 hour in milliseconds
    refresh-token:
      expiration-time: ${JWT_REFRESH_EXPIRATION:604800000}  # 7 days in milliseconds

aws:
  s3:
    enable: ${AWS_S3_ENABLE:false}
    bucket: ${AWS_S3_BUCKET:your-bucket-name}
    region: ${AWS_S3_REGION:us-east-1}
    access-key: ${AWS_S3_ACCESS_KEY:your_aws_access_key_id}
    secret-key: ${AWS_S3_SECRET_KEY:your_aws_secret_access_key}